{"ast":null,"code":"var _jsxFileName = \"/Users/d.t./Desktop/final/final-project-team_anon/client/src/instruments/SurajBajgain.tsx\",\n    _s = $RefreshSig$();\n\n// 3rd party library imports\nimport * as Tone from \"tone\";\nimport classNames from \"classnames\";\nimport { List } from \"immutable\";\nimport React, { useState } from \"react\"; // project imports\n\nimport { Instrument } from \"../Instruments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TrumpetType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames(\"dim pointer ph2 pv1 ba mr2 br1 fw7 bw1\", {\n      \"b--black black\": active,\n      \"gray b--light-gray\": !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TrumpetType;\n\nfunction Trumpet({\n  synth,\n  setSynth\n}) {\n  _s();\n\n  const [leftValve, setLeftValve] = useState(false);\n  const [middleValve, setMiddleValve] = useState(false);\n  const [rightValve, setRightValve] = useState(false);\n  const notes = [\"C3\", \"D3\", \"E3\", \"F3\"];\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List([\"sawtooth\"]);\n\n  const pressValve = type => {\n    switch (type) {\n      case \"left\":\n        setLeftValve(prev => !prev);\n        break;\n\n      case \"middle\":\n        setMiddleValve(prev => !prev);\n        break;\n\n      case \"right\":\n        setRightValve(prev => !prev);\n        break;\n    }\n  };\n\n  const getCurrentNote = () => {\n    let idx = 0;\n\n    if (leftValve) {\n      idx++;\n    }\n\n    if (middleValve) {\n      idx++;\n    }\n\n    if (rightValve) {\n      idx++;\n    }\n\n    return notes[idx];\n  };\n\n  const makeSoundDown = () => {\n    if (!synth) {\n      return;\n    }\n\n    let note = getCurrentNote();\n    synth.triggerAttack(note);\n  };\n\n  const makeSoundUp = () => {\n    if (!synth) {\n      return;\n    }\n\n    synth.triggerRelease(\"+0.1\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main-pipe\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lead-pipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"reciever\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mouth\",\n        onMouseDown: makeSoundDown,\n        onMouseUp: makeSoundUp,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"mouthpiece-stem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"mouthpiece-cup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"valves\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"valve\", leftValve ? \"pressed\" : \"null\"),\n          onClick: () => pressValve(\"left\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"piston\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"valve\", middleValve ? \"pressed\" : \"null\"),\n          onClick: () => pressValve(\"middle\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"piston\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"valve\", rightValve ? \"pressed\" : \"null\"),\n          onClick: () => pressValve(\"right\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"piston\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"front-triangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pl4 pt4 flex\",\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(TrumpetType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Trumpet, \"/trkt06sqCejtKRMuLkHAsWB75Q=\");\n\n_c2 = Trumpet;\nexport const TrumpetInstrument = new Instrument(\"Trumpet\", Trumpet);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TrumpetType\");\n$RefreshReg$(_c2, \"Trumpet\");","map":{"version":3,"sources":["/Users/d.t./Desktop/final/final-project-team_anon/client/src/instruments/SurajBajgain.tsx"],"names":["Tone","classNames","List","React","useState","Instrument","TrumpetType","title","onClick","active","Trumpet","synth","setSynth","leftValve","setLeftValve","middleValve","setMiddleValve","rightValve","setRightValve","notes","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","toDestination","oscillators","pressValve","prev","getCurrentNote","idx","makeSoundDown","note","triggerAttack","makeSoundUp","triggerRelease","map","o","TrumpetInstrument"],"mappings":";;;AAAA;AACA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAA4B,WAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,UAAT,QAA4C,gBAA5C;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAArB,EAAmE;AACjE,sBACE;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,SAAS,EAAEP,UAAU,CAAC,wCAAD,EAA2C;AAC9D,wBAAkBQ,MAD4C;AAE9D,4BAAsB,CAACA;AAFuC,KAA3C,CAFvB;AAAA,cAOGF;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAZQD,W;;AAcT,SAASI,OAAT,CAAiB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAjB,EAAoE;AAAA;;AAClE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMe,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAd;;AAEA,QAAMC,aAAa,GAAIC,OAAD,IAAsC;AAC1DT,IAAAA,QAAQ,CAAEU,QAAD,IAAc;AACrBA,MAAAA,QAAQ,CAACC,UAAT;AAEA,aAAO,IAAIvB,IAAI,CAACwB,KAAT,CAAe;AACpBC,QAAAA,UAAU,EAAE;AAAEC,UAAAA,IAAI,EAAEL;AAAR;AADQ,OAAf,EAEJM,aAFI,EAAP;AAGD,KANO,CAAR;AAOD,GARD;;AAUA,QAAMC,WAAiC,GAAG1B,IAAI,CAAC,CAC7C,UAD6C,CAAD,CAA9C;;AAIA,QAAM2B,UAAU,GAAIH,IAAD,IAAkB;AACnC,YAAQA,IAAR;AACE,WAAK,MAAL;AACEZ,QAAAA,YAAY,CAAEgB,IAAD,IAAU,CAACA,IAAZ,CAAZ;AACA;;AACF,WAAK,QAAL;AACEd,QAAAA,cAAc,CAAEc,IAAD,IAAU,CAACA,IAAZ,CAAd;AACA;;AACF,WAAK,OAAL;AACEZ,QAAAA,aAAa,CAAEY,IAAD,IAAU,CAACA,IAAZ,CAAb;AACA;AATJ;AAWD,GAZD;;AAcA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIC,GAAG,GAAG,CAAV;;AACA,QAAInB,SAAJ,EAAe;AACbmB,MAAAA,GAAG;AACJ;;AACD,QAAIjB,WAAJ,EAAiB;AACfiB,MAAAA,GAAG;AACJ;;AACD,QAAIf,UAAJ,EAAgB;AACde,MAAAA,GAAG;AACJ;;AACD,WAAOb,KAAK,CAACa,GAAD,CAAZ;AACD,GAZD;;AAcA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAI,CAACtB,KAAL,EAAY;AACV;AACD;;AACD,QAAIuB,IAAI,GAAGH,cAAc,EAAzB;AACApB,IAAAA,KAAK,CAACwB,aAAN,CAAoBD,IAApB;AACD,GAND;;AAQA,QAAME,WAAW,GAAG,MAAM;AACxB,QAAI,CAACzB,KAAL,EAAY;AACV;AACD;;AACDA,IAAAA,KAAK,CAAC0B,cAAN,CAAqB,MAArB;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,EAAE,EAAC,OAAR;AAAgB,QAAA,WAAW,EAAEJ,aAA7B;AAA4C,QAAA,SAAS,EAAEG,WAAvD;AAAA,gCACE;AAAK,UAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA,gCACE;AACE,UAAA,SAAS,EAAEnC,UAAU,CAAC,OAAD,EAAUY,SAAS,GAAG,SAAH,GAAe,MAAlC,CADvB;AAEE,UAAA,OAAO,EAAE,MAAMgB,UAAU,CAAC,MAAD,CAF3B;AAAA,kCAIE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AACE,UAAA,SAAS,EAAE5B,UAAU,CAAC,OAAD,EAAUc,WAAW,GAAG,SAAH,GAAe,MAApC,CADvB;AAEE,UAAA,OAAO,EAAE,MAAMc,UAAU,CAAC,QAAD,CAF3B;AAAA,kCAIE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAmBE;AACE,UAAA,SAAS,EAAE5B,UAAU,CAAC,OAAD,EAAUgB,UAAU,GAAG,SAAH,GAAe,MAAnC,CADvB;AAEE,UAAA,OAAO,EAAE,MAAMY,UAAU,CAAC,OAAD,CAF3B;AAAA,kCAIE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,eA4BE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA2CE;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,gBACGD,WAAW,CAACU,GAAZ,CAAiBC,CAAD,iBACf,QAAC,WAAD;AAEE,QAAA,KAAK,EAAEA,CAFT;AAGE,QAAA,OAAO,EAAE,MAAMnB,aAAa,CAACmB,CAAD,CAH9B;AAIE,QAAA,MAAM,EAAE,CAAA5B,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEc,UAAP,CAAkBC,IAAlB,MAA2Ba;AAJrC,SACOA,CADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwDD;;GAxHQ7B,O;;MAAAA,O;AA0HT,OAAO,MAAM8B,iBAAiB,GAAG,IAAInC,UAAJ,CAAe,SAAf,EAA0BK,OAA1B,CAA1B","sourcesContent":["// 3rd party library imports\nimport * as Tone from \"tone\";\nimport classNames from \"classnames\";\nimport { List, Range } from \"immutable\";\nimport React, { useState } from \"react\";\n\n// project imports\nimport { Instrument, InstrumentProps } from \"../Instruments\";\n\nfunction TrumpetType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames(\"dim pointer ph2 pv1 ba mr2 br1 fw7 bw1\", {\n        \"b--black black\": active,\n        \"gray b--light-gray\": !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\nfunction Trumpet({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const [leftValve, setLeftValve] = useState(false);\n  const [middleValve, setMiddleValve] = useState(false);\n  const [rightValve, setRightValve] = useState(false);\n\n  const notes = [\"C3\", \"D3\", \"E3\", \"F3\"];\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth((oldSynth) => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n  const oscillators: List<OscillatorType> = List([\n    \"sawtooth\",\n  ]) as List<OscillatorType>;\n\n  const pressValve = (type: string) => {\n    switch (type) {\n      case \"left\":\n        setLeftValve((prev) => !prev);\n        break;\n      case \"middle\":\n        setMiddleValve((prev) => !prev);\n        break;\n      case \"right\":\n        setRightValve((prev) => !prev);\n        break;\n    }\n  };\n\n  const getCurrentNote = () => {\n    let idx = 0;\n    if (leftValve) {\n      idx++;\n    }\n    if (middleValve) {\n      idx++;\n    }\n    if (rightValve) {\n      idx++;\n    }\n    return notes[idx];\n  };\n\n  const makeSoundDown = () => {\n    if (!synth) {\n      return;\n    }\n    let note = getCurrentNote();\n    synth.triggerAttack(note);\n  };\n\n  const makeSoundUp = () => {\n    if (!synth) {\n      return;\n    }\n    synth.triggerRelease(\"+0.1\");\n  };\n\n  return (\n    <div className=\"pv4\">\n      <div id=\"wrapper\">\n        <div id=\"main-pipe\">\n          <div className=\"filler\" />\n        </div>\n        <div id=\"lead-pipe\" />\n        <div id=\"reciever\" />\n        <div id=\"mouth\" onMouseDown={makeSoundDown} onMouseUp={makeSoundUp}>\n          <div id=\"mouthpiece-stem\" />\n          <div id=\"mouthpiece-cup\" />\n        </div>\n\n        <div id=\"valves\">\n          <div\n            className={classNames(\"valve\", leftValve ? \"pressed\" : \"null\")}\n            onClick={() => pressValve(\"left\")}\n          >\n            <div className=\"bottom-cap\" />\n            <div className=\"top-cap\" />\n            <div className=\"piston\" />\n            <div className=\"button\" />\n          </div>\n          <div\n            className={classNames(\"valve\", middleValve ? \"pressed\" : \"null\")}\n            onClick={() => pressValve(\"middle\")}\n          >\n            <div className=\"bottom-cap\" />\n            <div className=\"top-cap\" />\n            <div className=\"piston\" />\n            <div className=\"button\" />\n          </div>\n          <div\n            className={classNames(\"valve\", rightValve ? \"pressed\" : \"null\")}\n            onClick={() => pressValve(\"right\")}\n          >\n            <div className=\"bottom-cap\" />\n            <div className=\"top-cap\" />\n            <div className=\"piston\" />\n            <div className=\"button\" />\n          </div>\n          <div className=\"front-triangle\" />\n        </div>\n      </div>\n      <div className={\"pl4 pt4 flex\"}>\n        {oscillators.map((o) => (\n          <TrumpetType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const TrumpetInstrument = new Instrument(\"Trumpet\", Trumpet);\n"]},"metadata":{},"sourceType":"module"}