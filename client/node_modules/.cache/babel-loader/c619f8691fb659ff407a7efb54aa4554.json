{"ast":null,"code":"var _jsxFileName = \"/Users/d.t./Desktop/final/final-project-team_anon/client/src/instruments/shailendra1000.tsx\";\n// 3rd party library imports\nimport * as Tone from \"tone\";\nimport classNames from \"classnames\";\nimport { List } from \"immutable\";\nimport React from \"react\"; // project imports\n\nimport { Instrument } from \"../Instruments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GuitarType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames(\"dim pointer ph2 pv1 ba mr2 br1 fw7 bw1\", {\n      \"b--black black\": active,\n      \"gray b--light-gray\": !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = GuitarType;\n\nfunction Guitar({\n  synth,\n  setSynth\n}) {\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List([\"sine\", \"sawtooth\", \"square\", \"triangle\", \"fmsine\", \"fmsawtooth\", \"fmtriangle\", \"amsine\", \"amsawtooth\", \"amtriangle\"]);\n\n  const mouseDown = (note, octave) => {\n    synth === null || synth === void 0 ? void 0 : synth.triggerAttackRelease(`${note}${octave}`, \"0.5\");\n  };\n\n  const octave = 2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"guitar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"frets\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"strings\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"string\",\n            onMouseDown: () => mouseDown(\"C\", octave)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"string\",\n            onMouseDown: () => mouseDown(\"D\", octave)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"string\",\n            onMouseDown: () => mouseDown(\"E\", octave)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"string\",\n            onMouseDown: () => mouseDown(\"F\", octave)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"string\",\n            onMouseDown: () => mouseDown(\"G\", octave)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"string\",\n            onMouseDown: () => mouseDown(\"A\", octave)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pl4 pt4 flex\",\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(GuitarType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Guitar;\nexport const GuitarInstrument = new Instrument(\"Guitar\", Guitar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GuitarType\");\n$RefreshReg$(_c2, \"Guitar\");","map":{"version":3,"sources":["/Users/d.t./Desktop/final/final-project-team_anon/client/src/instruments/shailendra1000.tsx"],"names":["Tone","classNames","List","React","Instrument","GuitarType","title","onClick","active","Guitar","synth","setSynth","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","toDestination","oscillators","mouseDown","note","octave","triggerAttackRelease","map","o","GuitarInstrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from \"tone\";\nimport classNames from \"classnames\";\nimport { List, Range } from \"immutable\";\nimport React from \"react\";\n\n// project imports\nimport { Instrument, InstrumentProps } from \"../Instruments\";\n\nfunction GuitarType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames(\"dim pointer ph2 pv1 ba mr2 br1 fw7 bw1\", {\n        \"b--black black\": active,\n        \"gray b--light-gray\": !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\nfunction Guitar({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth((oldSynth) => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n  const oscillators: List<OscillatorType> = List([\n    \"sine\",\n    \"sawtooth\",\n    \"square\",\n    \"triangle\",\n    \"fmsine\",\n    \"fmsawtooth\",\n    \"fmtriangle\",\n    \"amsine\",\n    \"amsawtooth\",\n    \"amtriangle\",\n  ]) as List<OscillatorType>;\n\n  const mouseDown = (note: string, octave: number) => {\n    synth?.triggerAttackRelease(`${note}${octave}`, \"0.5\");\n  };\n\n  const octave = 2;\n\n  return (\n    <div className=\"pv4\">\n      <div id=\"guitar\">\n        <div className=\"board\">\n          <div className=\"frets\">\n            <div className=\"fret\" />\n            <div className=\"fret\" />\n            <div className=\"fret\" />\n            <div className=\"fret\" />\n            <div className=\"fret\" />\n            <div className=\"fret\" />\n          </div>\n          <div className=\"strings\">\n            <div\n              className=\"string\"\n              onMouseDown={() => mouseDown(\"C\", octave)}\n            />\n            <div\n              className=\"string\"\n              onMouseDown={() => mouseDown(\"D\", octave)}\n            />\n            <div\n              className=\"string\"\n              onMouseDown={() => mouseDown(\"E\", octave)}\n            />\n            <div\n              className=\"string\"\n              onMouseDown={() => mouseDown(\"F\", octave)}\n            />\n            <div\n              className=\"string\"\n              onMouseDown={() => mouseDown(\"G\", octave)}\n            />\n            <div\n              className=\"string\"\n              onMouseDown={() => mouseDown(\"A\", octave)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={\"pl4 pt4 flex\"}>\n        {oscillators.map((o) => (\n          <GuitarType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const GuitarInstrument = new Instrument(\"Guitar\", Guitar);\n"]},"metadata":{},"sourceType":"module"}