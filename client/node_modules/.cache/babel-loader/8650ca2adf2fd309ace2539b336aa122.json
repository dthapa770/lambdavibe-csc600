{"ast":null,"code":"var _jsxFileName = \"/Users/d.t./Desktop/final/final-project-team_anon/client/src/instruments/dthapa770.tsx\",\n    _s = $RefreshSig$();\n\n// 3rd party library imports\nimport * as Tone from \"tone\";\nimport classNames from \"classnames\";\nimport { List } from \"immutable\";\nimport React, { useState } from \"react\"; // project imports\n\nimport { Instrument } from \"../Instruments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FluteType({\n  title,\n  onClick,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames(\"dim pointer ph2 pv1 ba mr2 br1 fw7 bw1\", {\n      \"b--black black\": active,\n      \"gray b--light-gray\": !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FluteType;\n\nfunction Flute({\n  synth,\n  setSynth\n}) {\n  _s();\n\n  //false => not pressed\n  const [holeStatus, setHoleStatus] = useState([false, false, false, false, false, false]);\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List([\"amsine\"]);\n\n  const toggleHole = holeIndex => {\n    setHoleStatus(prevState => {\n      let copy = [...prevState];\n      copy[holeIndex] = !copy[holeIndex];\n      return copy;\n    });\n  };\n\n  const mouseDown = () => {\n    let notes = [\"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n    let idx = holeStatus.filter(val => val).length;\n    let note = notes[idx];\n\n    if (!note) {\n      return;\n    }\n\n    let octave = 3;\n    synth === null || synth === void 0 ? void 0 : synth.triggerAttack(`${note}${octave}`, \"0.5\");\n  };\n\n  const mouseUp = () => {\n    synth === null || synth === void 0 ? void 0 : synth.triggerRelease(\"+0.2\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flute\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fluteBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fluteMouth\",\n          onMouseDown: mouseDown,\n          onMouseUp: mouseUp,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fluteMouthPiece\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fluteHoles\",\n          children: holeStatus.map((val, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hole\",\n              onClick: () => toggleHole(idx),\n              children: holeStatus[idx] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"finger\",\n                onClick: () => toggleHole(idx),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nail\",\n                  onClick: () => toggleHole(idx)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pl4 pt4 flex\",\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(FluteType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Flute, \"TIY4mQlvuNMTOyX/Z1UrXDkqRkA=\");\n\n_c2 = Flute;\nexport const FluteInstrument = new Instrument(\"Flute\", Flute);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FluteType\");\n$RefreshReg$(_c2, \"Flute\");","map":{"version":3,"sources":["/Users/d.t./Desktop/final/final-project-team_anon/client/src/instruments/dthapa770.tsx"],"names":["Tone","classNames","List","React","useState","Instrument","FluteType","title","onClick","active","Flute","synth","setSynth","holeStatus","setHoleStatus","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","toDestination","oscillators","toggleHole","holeIndex","prevState","copy","mouseDown","notes","idx","filter","val","length","note","octave","triggerAttack","mouseUp","triggerRelease","map","o","FluteInstrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from \"tone\";\nimport classNames from \"classnames\";\nimport { List, Range, set } from \"immutable\";\nimport React, { useState } from \"react\";\n\n// project imports\nimport { Instrument, InstrumentProps } from \"../Instruments\";\n\nfunction FluteType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames(\"dim pointer ph2 pv1 ba mr2 br1 fw7 bw1\", {\n        \"b--black black\": active,\n        \"gray b--light-gray\": !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\nfunction Flute({ synth, setSynth }: InstrumentProps): JSX.Element {\n  //false => not pressed\n  const [holeStatus, setHoleStatus] = useState([\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n  ]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth((oldSynth) => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n  const oscillators: List<OscillatorType> = List([\n    \"amsine\" as OscillatorType,\n  ]) as List<OscillatorType>;\n\n  const toggleHole = (holeIndex: number) => {\n    setHoleStatus((prevState: boolean[]) => {\n      let copy = [...prevState];\n      copy[holeIndex] = !copy[holeIndex];\n      return copy;\n    });\n  };\n\n  const mouseDown = () => {\n    let notes = [\"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n    let idx = holeStatus.filter((val: boolean) => val).length;\n    let note = notes[idx];\n    if (!note) {\n      return;\n    }\n    let octave = 3;\n    synth?.triggerAttack(`${note}${octave}`, \"0.5\");\n  };\n\n  const mouseUp = () => {\n    synth?.triggerRelease(\"+0.2\");\n  };\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"flute\">\n        <div className=\"fluteBody\">\n          <div\n            className=\"fluteMouth\"\n            onMouseDown={mouseDown}\n            onMouseUp={mouseUp}\n          >\n            <div className=\"fluteMouthPiece\" />\n          </div>\n          <div className=\"fluteHoles\">\n            {holeStatus.map((val, idx) => {\n              return (\n                <div key={idx} className=\"hole\" onClick={() => toggleHole(idx)}>\n                  {holeStatus[idx] && (\n                    <div className=\"finger\" onClick={() => toggleHole(idx)}>\n                      <div className=\"nail\" onClick={() => toggleHole(idx)} />\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className={\"pl4 pt4 flex\"}>\n        {oscillators.map((o) => (\n          <FluteType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const FluteInstrument = new Instrument(\"Flute\", Flute);\n"]},"metadata":{},"sourceType":"module"}